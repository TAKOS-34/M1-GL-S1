
package org.anonbnr.web_services.employeeservice.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EmployeeService", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EmployeeService {


    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.CountResponse")
    @Action(input = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/countRequest", output = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/countResponse")
    public int count();

    /**
     * 
     * @return
     *     returns java.util.List<org.anonbnr.web_services.employeeservice.client.Employee>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmployees", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.GetEmployees")
    @ResponseWrapper(localName = "getEmployeesResponse", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.GetEmployeesResponse")
    @Action(input = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/getEmployeesRequest", output = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/getEmployeesResponse")
    public List<Employee> getEmployees();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.anonbnr.web_services.employeeservice.client.Employee
     * @throws EmployeeNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateEmployee", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.UpdateEmployee")
    @ResponseWrapper(localName = "updateEmployeeResponse", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.UpdateEmployeeResponse")
    @Action(input = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/updateEmployeeRequest", output = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/updateEmployeeResponse", fault = {
        @FaultAction(className = EmployeeNotFoundException_Exception.class, value = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/updateEmployee/Fault/EmployeeNotFoundException")
    })
    public Employee updateEmployee(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws EmployeeNotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.anonbnr.web_services.employeeservice.client.Employee
     * @throws EmployeeAlreadyExistsException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addEmployee", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.AddEmployee")
    @ResponseWrapper(localName = "addEmployeeResponse", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.AddEmployeeResponse")
    @Action(input = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/addEmployeeRequest", output = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/addEmployeeResponse", fault = {
        @FaultAction(className = EmployeeAlreadyExistsException_Exception.class, value = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/addEmployee/Fault/EmployeeAlreadyExistsException")
    })
    public Employee addEmployee(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws EmployeeAlreadyExistsException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws EmployeeNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteEmployee", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.DeleteEmployee")
    @ResponseWrapper(localName = "deleteEmployeeResponse", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.DeleteEmployeeResponse")
    @Action(input = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/deleteEmployeeRequest", output = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/deleteEmployeeResponse", fault = {
        @FaultAction(className = EmployeeNotFoundException_Exception.class, value = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/deleteEmployee/Fault/EmployeeNotFoundException")
    })
    public boolean deleteEmployee(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws EmployeeNotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.anonbnr.web_services.employeeservice.client.Employee
     * @throws EmployeeNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmployee", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.GetEmployee")
    @ResponseWrapper(localName = "getEmployeeResponse", targetNamespace = "http://service.employeeservice.web_services.anonbnr.org/", className = "org.anonbnr.web_services.employeeservice.client.GetEmployeeResponse")
    @Action(input = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/getEmployeeRequest", output = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/getEmployeeResponse", fault = {
        @FaultAction(className = EmployeeNotFoundException_Exception.class, value = "http://service.employeeservice.web_services.anonbnr.org/EmployeeService/getEmployee/Fault/EmployeeNotFoundException")
    })
    public Employee getEmployee(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws EmployeeNotFoundException_Exception
    ;

}
